plugins {
  id 'com.jfrog.bintray' version '1.7.3'
}
apply plugin: 'java'
apply plugin: 'jacoco'

String getVersion() {
  def versionFile = sourceSets.main.resources.srcDirs[0].path + '/' + project.name + '.version'
  def version = new BufferedReader(new FileReader(versionFile)).readLine().trim()
  return version
}

group = 'com.obsidiandynamics.indigo'
version = getVersion()

repositories {
  jcenter()
}

dependencies {
  testCompile 'junit:junit:4.12'
  testCompile 'org.apache.commons:commons-math3:3.2'
  testCompile 'org.awaitility:awaitility:2.0.0'
}

test {
  include 'com/obsidiandynamics/indigo/CycledPrimaryTests.class'
  include 'com/obsidiandynamics/indigo/SupportingTests.class'
}

task testJar(type: Jar) {
  dependsOn jar
  manifest { 
    attributes "Main-Class": "com.obsidiandynamics.indigo.PrimaryTestsSoak"
  } 
  from sourceSets.main.output
  from sourceSets.test.output
  from { // bundle all dependencies
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    configurations.testCompile.collect { it.isDirectory() ? it : zipTree(it) }
  }   
  baseName 'indigo-core-test'
}

jar {
  baseName 'indigo-core'
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.enabled false
    html.enabled true
  }
}

def perfJvmArgs = '-server -XX:+TieredCompilation -XX:+UseNUMA -XX:+UseCondCardMark -XX:-UseBiasedLocking -Xms1024M -Xmx2048M -Xss1M -XX:+UseParallelGC'

task testBench(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
  jvmArgs = Arrays.asList perfJvmArgs.split(' ')
  main = 'com.obsidiandynamics.indigo.benchmark.BenchmarkSuite'
}

task testSoak(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
  jvmArgs = Arrays.asList perfJvmArgs.split(' ') + '-ea'
  standardInput = System.in
  main = 'com.obsidiandynamics.indigo.PrimaryTestsSoak'
}

bintray {
  def envKey = 'BINTRAY_KEY'
  if (System.getenv(envKey) == null) {
    throw new GradleException("No Bintray key specified; set with 'export ${envKey}=<key>'")
  }
  def packageVersion = version
  
  user = 'ekoutanov'
  key = System.getenv(envKey)
  configurations = ['archives']
  pkg {
    repo = 'indigo'
    name = 'indigo-core'
    userOrg = 'obsidiandynamics'
    desc = 'A lightweight actor system for the JVM'
    websiteUrl = 'https://github.com/obsidiandynamics/indigo'
    licenses = ['BSD New']
    vcsUrl = 'https://github.com/obsidiandynamics/indigo.git'
    publicDownloadNumbers = true
    githubRepo = 'obsidiandynamics/indigo'
    version {
      name = packageVersion
      desc = 'Indigo'
      released  = new Date()
      vcsTag = packageVersion
    }
  }
}

task publish {
  dependsOn bintrayUpload
}