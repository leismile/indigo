apply plugin: 'java'
buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "io.spring.gradle:dependency-management-plugin:1.0.0.RC2"
  }
}
apply plugin: "io.spring.dependency-management"

dependencyManagement {
  imports {
    mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.126'
  }
}

repositories {
  jcenter()
}

task testJar(type: Jar) {
  dependsOn jar
  from sourceSets.main.output
  from sourceSets.test.output
  from { // bundle all dependencies
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    configurations.testCompile.collect { it.isDirectory() ? it : zipTree(it) }
  }   
  baseName 'indigo-examples-test'
}

def perfJvmArgs = '-server -XX:-MaxFDLimit -XX:+TieredCompilation -XX:+UseNUMA -XX:+UseCondCardMark -XX:-UseBiasedLocking -Xms1G -Xmx4G -Xss1M -XX:+UseParallelGC'

task fanOutBench(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
  jvmArgs = Arrays.asList perfJvmArgs.split(' ')
  main = 'com.obsidiandynamics.indigo.socketx.FanOutBenchmark'
}

task rigBench(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
  jvmArgs = Arrays.asList perfJvmArgs.split(' ')
  main = 'com.obsidiandynamics.indigo.iot.rig.RigBenchmark'
}

task edgeRigBench(type: JavaExec) {
  systemProperties = System.properties
  classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
  jvmArgs = Arrays.asList perfJvmArgs.split(' ')
  main = 'com.obsidiandynamics.indigo.iot.rig.EdgeRigBenchmark'
}

task remoteRigBench(type: JavaExec) {
  systemProperties = System.properties
  classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
  jvmArgs = Arrays.asList perfJvmArgs.split(' ')
  main = 'com.obsidiandynamics.indigo.iot.rig.RemoteRigBenchmark'
}

task beaconServer(type: JavaExec) {
  systemProperties = System.properties
  classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
  main = 'com.obsidiandynamics.indigo.iot.beacon.BeaconServer'
}

dependencies {
  compile project(':')
  compile project(':indigo-commons')
  compile 'com.amazonaws:aws-java-sdk-dynamodb'
  compile 'org.zeromq:jeromq:0.4.0'
  compile 'com.google.code.gson:gson:2.8.0'
  compile 'org.danilopianini:gson-extras:0.2.1'
  compile 'com.owlike:genson:1.4'
  compile 'org.eclipse.jetty.websocket:websocket-server:9.4.5.v20170502'
  compile 'org.eclipse.jetty.websocket:websocket-client:9.4.5.v20170502'
  compile 'io.undertow:undertow-core:1.4.15.Final'
  compile 'io.undertow:undertow-websockets-jsr:1.4.15.Final'
  compile 'io.netty:netty-all:4.1.11.Final'
  compile 'org.slf4j:slf4j-api:1.7.6'
  runtime 'org.slf4j:slf4j-log4j12:1.7.6'
  runtime 'log4j:log4j:1.2.17'

  testCompile project(':indigo-assurance')
}
