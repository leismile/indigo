apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'java'
apply plugin: 'jacoco'

group = project(':').group
version = project(':').version

def packageName = 'indigo-commons'

repositories {
  jcenter()
}

dependencies {
  testCompile 'com.obsidiandynamics.fulcrum:fulcrum-assert:0.3.0'
  testCompile 'junit:junit:4.12'
}

jacoco {
  toolVersion = "0.7.9"
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.enabled false
    html.enabled true
  }
}

def envUser = 'BINTRAY_USER'
def envKey = 'BINTRAY_KEY'
def packageDesc = 'Common utilities for Indigo'
bintray {
  user = System.getenv(envUser)
  key = System.getenv(envKey)
  publications = ['mavenJava']
  pkg {
    repo = 'indigo'
    name = packageName
    userOrg = 'obsidiandynamics'
    desc = packageDesc
    websiteUrl = 'https://github.com/obsidiandynamics/indigo'
    licenses = ['BSD New']
    vcsUrl = 'https://github.com/obsidiandynamics/indigo.git'
    publicDownloadNumbers = true
    githubRepo = 'obsidiandynamics/indigo'
    override = true
    publish = false
    version {
      name = project(':').version
      desc = packageDesc
      released  = new Date()
      vcsTag = project(':').version
    }
  }
}

// invoke this task when ready to publish to Bintray
bintrayUpload {
  dependsOn ':bintrayCredentialsCheck'
}

jar {
  baseName packageName
  finalizedBy jacocoTestReport
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  baseName packageName
  classifier = 'javadoc'
  from "$buildDir/docs/javadoc"
}
 
task sourcesJar(type: Jar) {
  baseName packageName
  from sourceSets.main.allSource
  classifier = 'sources'
}
 
artifacts {
  archives jar
  archives javadocJar
  archives sourcesJar
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      groupId project(':').group
      artifactId packageName
      version project(':').version
      from components.java
      artifact sourcesJar
      artifact javadocJar
    }
  }
  repositories {
    maven {
      url "${project(':').projectDir}/../repo"
    }
  }
}
